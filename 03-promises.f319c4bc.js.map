{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACXC,SAAUC,SAASC,cAAc,UACjCC,KAAMF,SAASC,cAAc,QAEhBE,WAADH,SAASC,cAAc,uBAEtBG,UAAFJ,SAASC,cAAc,sBAEjBI,YAAJL,SAASC,cAAc,yBAGtCH,EAAKC,SAASO,iBAAiB,UAE/B,SAAkBC,GAChBA,EAAIC,iBACJ,IAAMC,EAAQC,OAAOZ,EAAKK,WAAWQ,OAC/BC,EAAOF,OAAOZ,EAAKM,UAAUO,OAC7BE,EAASH,OAAOZ,EAAKO,YAAYM,OAKvC,GAJAG,QAAQC,IAAIN,EAAOG,EAAMC,GAEzBd,SAASiB,UAAW,EAEhBP,EAAQ,GAAKG,EAAO,GAAKC,EAAS,EACpCjB,EAAAqB,OAAOC,QAAS,iCACX,GAAuB,IAAnBR,OAAOG,GAChBjB,EAAAqB,OAAOC,QAAS,iCAEhB,KAAa,EAAOL,EAAP,EAAsB,CACjC,SAASM,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAGpBA,E,IAGPF,EAfW,EAeMV,EAfN,EAecG,GAEzB,IAAIa,QAAQI,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAC5BP,QAAQC,IAAI,CAAEK,WAAUC,UACxBzB,EAAAqB,OAAOc,QAAQ,uBAA4CC,OAAnBZ,EAAW,EAAE,QAAYY,OAANX,EAAM,M,IAChEY,OAAM,SAAAH,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACpBP,QAAQC,IAAI,CAAEK,WAAUC,UACxBzB,EAAAqB,OAAOiB,QAAQ,sBAAyCF,OAAnBZ,EAAW,EAAE,QAAYY,OAANX,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  startBtn: document.querySelector('button'),\n  form: document.querySelector('form'),\n  //  перша затримка\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  // кожна наступна\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  // кількість промісів\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.startBtn.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const delay = Number(refs.delayInput.value);\n  const step = Number(refs.stepInput.value);\n  const amount = Number(refs.amountInput.value);\n  console.log(delay, step, amount);\n\n  startBtn.disabled = true;\n\n  if (delay < 0 || step < 0 || amount < 0) {\n    Notify.warning(`Enter number more than 0`);\n  } else if (Number(amount) === 0) {\n    Notify.warning(`Enter number more than 0`);\n  } else {\n    for (let i = 0; i < amount; i + 1) {\n      function createPromise(position, delay) {\n        const shouldResolve = Math.random() > 0.3;\n        return new Promise((resolve, reject) => {\n          setTimeout(() => {\n            if (shouldResolve) {\n              resolve({ position, delay });\n              // Fulfill\n            } else {\n              reject({ position, delay });\n              // Reject\n            }\n          }, delay);\n        });\n      }\n      createPromise(i, delay + step * i);\n\n      new Promise.then(({ position, delay }) => {\n        console.log({ position, delay });\n        Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n      }).catch(({ position, delay }) => {\n        console.log({ position, delay });\n        Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n      });\n    }\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","startBtn","document","querySelector","form","delayInput","stepInput","amountInput","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","console","log","disabled","Notify","warning","createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.f319c4bc.js.map"}